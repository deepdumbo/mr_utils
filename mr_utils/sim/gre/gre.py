import numpy as np
from mr_utils.sim.ssfp import ssfp

def ernst(TR,T1):
    '''Computes the Ernst angle.

    TR -- repetition time.
    T1 -- longitudinal exponential decay time constant.

    Implements equation [14.9] from:
        Notes from Bernstein, M. A., King, K. F., & Zhou, X. J. (2004).
        Handbook of MRI pulse sequences. Elsevier.
    '''

    # Don't divide by zero!
    alpha = np.zeros(T1.shape)
    idx = np.nonzero(T1)
    alpha[idx] = np.arccos(-TR/T1[idx])
    return(alpha)

def fzss(T1,TR,alpha=None):
    '''Dimensionless measure of steady-state longitudinal magnetization.

    T1 -- longitudinal exponential decay time constant.
    TR -- repetition time.
    alpha -- flip angle.

    alpha=None will use the Ernst angle.

    Implements equation [14.7] from:
        Notes from Bernstein, M. A., King, K. F., & Zhou, X. J. (2004).
        Handbook of MRI pulse sequences. Elsevier.
    '''

    if alpha is None:
        alpha = ernst(TR,T1)

    E1 = np.exp(-TR/T1)
    val = (1 - E1)/(1 - np.cos(alpha)*E1)
    return(val)

def spoiled_gre_k(T1,T2star,TR,TE,alpha=None,M0=1,k=1):
    '''Spoiled GRE contrast simulation for k excitation pulses.

    See spoiled_gre().
    k -- Number of excitation pulses the magnetization experiences.

    alpha=None will use the Ernst angle.

    Implements equations [14.10-11] from:
        Notes from Bernstein, M. A., King, K. F., & Zhou, X. J. (2004).
        Handbook of MRI pulse sequences. Elsevier.
    '''

    # Must have 1 or more excitations to do anything...
    assert(k > 0)

    # Some helper quantities
    E1 = np.exp(-TR/T1)
    E2 = np.exp(-TE/T2star)

    # If we are using ernst, then we have a closed form!
    if alpha is None:
        Sk = M0*np.sqrt((1 - E1)/(1 + E1))*(1 + E1**(2*k-1))*E2
    else:
        f = fzss(T1,TR,alpha)
        Sk = M0*np.sin(alpha)*(f + (np.cos(alpha)*E1)**(k-1)*(1 - f))*E2

    return(Sk)

def spoiled_gre(T1,T2star,TR,TE,alpha=None,M0=1):
    '''Spoiled, steady state GRE contrast simulation.

    T1 -- longitudinal exponential decay time constant.
    T2star -- Effective transverse exponential decay time constant.
    TR -- repetition time.
    TE -- echo time.
    alpha -- flip angle.
    M0 -- proton density.

    alpha=None will use the Ernst angle.

    Assuming a longitudinal steady-state and perfect spoiling. Note that
    dependence is on T2* rather than T2 because SE/STE formation is suppressed
    by spoiling and the signal is generated by gradient refocusing of an FID.

    Implements equation [14.8] from:
        Notes from Bernstein, M. A., King, K. F., & Zhou, X. J. (2004).
        Handbook of MRI pulse sequences. Elsevier.
    '''

    if alpha is None:
        alpha = ernst(TR,T1)

    # Make sure we don't divide by zero
    idx1 = np.nonzero(T1)
    idx2 = np.nonzero(T2star)
    E1 = np.zeros(T1.shape)
    E1[idx1] = np.exp(-TR/T1[idx1])
    E2 = np.zeros(T2star.shape)
    E2[idx2] = np.exp(-TE/T2star[idx2])

    # Do the thing:
    S = M0*np.sin(alpha)*(1 - E1)*E2/(1 - np.cos(alpha)*E1)
    return(S)
